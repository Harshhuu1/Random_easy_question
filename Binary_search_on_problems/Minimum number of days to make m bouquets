class Solution {
public:
    int isvalid(vector<int>& arr,int m ,int k ,int mid){
        int bouq=0;
        int consecutive=0;

        for(auto it:arr){
            if(it<=mid){
                consecutive++;
            }
            else{
                consecutive=0;
            }
            if(consecutive==k){
                bouq++;
                consecutive=0;
            }
            


       

    }
     return bouq>=m;}
    int minDays(vector<int>& bloomDay, int m, int k) {
        int low=*min_element(bloomDay.begin(),bloomDay.end());
        int high=*max_element(bloomDay.begin(),bloomDay.end());
       
       if ((long long)m * k > bloomDay.size()) return -1;
        int ans=-1;
        while(low<=high){
            int mid=(low+(high-low)/2);
            if(isvalid(bloomDay,m,k,mid)){
                ans=mid;
                high=mid-1;
            }
            else
            low=mid+1;
        }
        return ans;

    }
};
