bool helper(vector<int> &boards, int k, int n, int mid){
        int painters=1;
        int sum=0;
        
        for(int i=0;i<n;i++){
            if(painters>k) return false;
            sum+=boards[i];
            if(sum>mid){
                painters++;
                sum=boards[i];
            }
            if(painters>k){
                return false;
            }
                

            }
            return true;
        }

        


   int summ(vector<int> &boards){
       int sum=0;
       for(auto it:boards){
           sum+=it;
       }
       return sum;
   }   
int findLargestMinDistance(vector<int> &boards, int k)
{
    int start=*max_element(boards.begin(),boards.end());
    int end=summ(boards);
    int n=boards.size();
    int ans=-1;
    while(start<=end){
        int mid=(start+end)/2;
        if(helper(boards,k,n,mid)){
            ans=mid;
            end=mid-1;
        }
        else
            start=mid+1;
    }
    return ans;
   
    
    
}
